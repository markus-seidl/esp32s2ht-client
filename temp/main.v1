#include "Arduino.h"
#include "Wire.h"
#include "BitBang_I2C.h"
#include "WiFi.h"
#include "WiFiConfig.h"

#define SENSOR_ADDR 0x44
#define DEBUG

#ifdef DEBUG
#define debugln(a) Serial.println(a);
#define debug(a) Serial.print(a);
#else
#define debugln(a) ;
#define debug(a) ;
#endif

BBI2C bbi2c;

void initSensor();
void initWifi();
void ConnectToWiFi();

void setup() {

#ifdef DEBUG
    Serial.begin(115200);
    while (!Serial) { ; // wait for serial port to connect. Needed for native USB port only
    }
#endif

    initWifi();
    initSensor();
}

void initWifi() {
    WiFi.mode(WIFI_STA);
    WiFi.disconnect();

    ConnectToWiFi();
}

void scanWifi() {
    Serial.println("Start scan");
    int n = WiFi.scanNetworks();

    if (n == 0) {
        Serial.println("no networks found");
    } else {
        Serial.print(n);
        Serial.println(" networks found");
        for (int i = 0; i < n; ++i) {
            Serial.print(i + 1);
            Serial.print(": ");
            Serial.print(WiFi.SSID(i));
            Serial.print(" (");
            Serial.print(WiFi.RSSI(i));
            Serial.print(") ");
            Serial.print(" [");
            Serial.print(WiFi.channel(i));
            Serial.print("] ");
            delay(10);
        }
    }
    Serial.println("Scan done");
    Serial.println("");
    delay(10000);
}

void startConnectingToWifi() {
    WiFi.mode(WIFI_STA);
    WiFi.config(IPAddress(192, 168, 20, 110),
                IPAddress(192, 168, 20, 1),
                IPAddress(255, 255, 255, 0),
                IPAddress(192, 168, 20, 1),
                IPAddress(192, 168, 20, 1));

    WiFi.begin(SSID, WiFiPassword);
    debugln("Connecting to " + String(SSID));

    uint8_t i = 0;
    while (WiFi.status() != WL_CONNECTED) {
        debug(" . " + String(WiFi.status()));
        delay(500);

        if ((++i % 16) == 0) {
            debugln(" still trying to connect");
        }
    }

    debugln("Connected. My IP address is: ");
    debugln(WiFi.localIP());


}

void initSensor() {

    bbi2c.bWire = 0;
    bbi2c.iSDA = 13;
    bbi2c.iSCL = 14;

    debugln("Init i2c...");

    I2CInit(&bbi2c, 100000);

    debugln("testing 0x44");

    uint8_t ret = I2CTest(&bbi2c, SENSOR_ADDR);

    debugln("Got response: " + String(ret));

    if (ret) {
        debugln("Device detected!");
    }

    uint8_t data_request[2];
    data_request[0] = 0x00;
    data_request[1] = 0x06;
    ret = I2CWrite(&bbi2c, SENSOR_ADDR, data_request, 2);
    if (ret) {
        debugln("Sensor reset successful.")
    } else {
        debugln("Sensor reset unsuccessful.")
    }
}

void loop() {

    uint8_t data_request[2];
    data_request[0] = 0x2C;
    data_request[1] = 0x06;
    int ret = I2CWrite(&bbi2c, SENSOR_ADDR, data_request, 2);
    if (ret == 0) {
        debugln("Failure to send, NACK received.");
    }

    delay(1000);

    uint8_t data_return[6];
    data_return[0] = 1;
    data_return[1] = 1;
    ret = I2CRead(&bbi2c, SENSOR_ADDR, data_return, 6);
    if (ret != 1) {
        debugln("Read error: " + String(ret));
    }

    float temp = (((((float) data_return[0] * 256.0f) + (float) data_return[1]) * 175.0f) / 65535.0f) - 45.0f;
    debug("Temp: " + String(temp) + " ");

    float humid = (((((float) data_return[3] * 256.0f) + (float) data_return[4]) * 100.0f) / 65535.0f);
    debugln(humid);

    delay(2000);

}
